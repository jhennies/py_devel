datafolder: /mnt/localdata01/jhennies/neuraldata/cremi_2016/resolve_merges/
resultfolder: /mnt/localdata01/jhennies/neuraldata/results/multicut_workflow/170224_test/cache/find_merges_cache/
intermedfolder: /mnt/localdata01/jhennies/neuraldata/results/multicut_workflow/170224_test/cache/find_merges_cache/intermed/
scriptsfolder: /mnt/localdata01/jhennies/neuraldata/results/multicut_workflow/170224_test/cache/find_merges_cache/scripts/

debug: False

createfolders: True
overwriteresults: True

rawdatafile:    'cremi.splB.raw_neurons.crop.axes_xyz.crop_x100-612_y100-612.split_z.h5'
rawdataname:    'raw'
gtruthfile:     'cremi.splB.raw_neurons.crop.axes_xyz.crop_x100-612_y100-612.split_z.h5'
gtruthname:     'neuron_ids'
probsfile:      'cremi.splB.train.probs.crop.axes_xyz.crop_x100-612_y100-612.split_z.h5'
probsname:      'data'
segmfile:       'cremi.splB.train.mcseg_betas.crop.axes_xyz.crop_x100-612_y100-612.split_z.h5'
segmlargefile:  'segmlarge.h5'
rawfeatsfile:   'rawfeats.h5'
probsfeatsfile: 'probsfeats.h5'
segfeatsfile:   'segfeats.h5'
borderctfile:   'borderct.h5'
borderctname:   'contacts'
pathsfile:      'paths.h5'
featuresfile:   'features.h5'
pathlistfile:   'pathlist.pkl'
featlistfile:   'featlist.pkl'
rffile:         'randomforest.pkl'

run_remove_small_objects: False
run_compute_feature_images: False
run_find_border_contacts: False
run_compute_paths: True
run_features_of_paths: True
run_random_forest: True

remove_small_objects:
    sources:
        - [datafolder, segmfile, {skeys: [['z', '*']]}]
    targets:
        - [intermedfolder, segmlargefile]
    bysize: 10000
    relabel: True
    consecutive_labels: True
    filtering_threads: 1
    image_threads: 24


compute_feature_images:

    'rawdata':
        source: [datafolder, rawdatafile, {skeys: [['z', '*', raw]]}]
        target: [intermedfolder, rawfeatsfile]
        features:
            raw: ~
            gauss_2:
                params: [2]
                func: gaussian
            gauss_5:
                params: [5]
                func: gaussian
            gauss_10:
                params: [10]
                func: gaussian
            mag_1:
                params: [1]
                func: gaussian_gradient_magnitude
            mag_5:
                params: [5]
                func: gaussian_gradient_magnitude
            mag_10:
                params: [10]
                func: gaussian_gradient_magnitude
            hess_1:
                params: [1]
                func: hessian_eigenvalues
            hess_5:
                params: [5]
                func: hessian_eigenvalues
            hess_10:
                params: [10]
                func: hessian_eigenvalues
            lapl_1:
                params: [1]
                func: laplacian_of_gaussian
            lapl_5:
                params: [5]
                func: laplacian_of_gaussian
            lapl_10:
                params: [10]
                func: laplacian_of_gaussian
            structen_1_2:
                params: [1, 2]   # [inner_scale, outer_scale]
                func: structure_tensor_eigenvalues
            structen_4_8:
                params: [5, 10]
                func: structure_tensor_eigenvalues
            structen_8_16:
                params: [10, 20]
                func: structure_tensor_eigenvalues

    'probs':
        source: [datafolder, probsfile, {skeys: [['z', '*', data]]}]
        target: [intermedfolder, probsfeatsfile]
        features:
            raw: ~
            gauss_2:
                params: [2]
                func: gaussian
            gauss_5:
                params: [5]
                func: gaussian
            gauss_10:
                params: [10]
                func: gaussian
            mag_1:
                params: [1]
                func: gaussian_gradient_magnitude
            mag_5:
                params: [5]
                func: gaussian_gradient_magnitude
            mag_10:
                params: [10]
                func: gaussian_gradient_magnitude
            hess_1:
                params: [1]
                func: hessian_eigenvalues
            hess_5:
                params: [5]
                func: hessian_eigenvalues
            hess_10:
                params: [10]
                func: hessian_eigenvalues
            lapl_1:
                params: [1]
                func: laplacian_of_gaussian
            lapl_5:
                params: [5]
                func: laplacian_of_gaussian
            lapl_10:
                params: [10]
                func: laplacian_of_gaussian
            structen_1_2:
                params: [1, 2]   # [inner_scale, outer_scale]
                func: structure_tensor_eigenvalues
            structen_4_8:
                params: [5, 10]
                func: structure_tensor_eigenvalues
            structen_8_16:
                params: [10, 20]
                func: structure_tensor_eigenvalues

    'segmentation':
        source: [intermedfolder, segmlargefile, {skeys: [['z']]}]
        target: [intermedfolder, segfeatsfile]
        features:
            disttransf:
                params: ~
                func: disttransf
                raw: ~
                gauss_2:
                    params: [2]
                    func: gaussian
                gauss_5:
                    params: [5]
                    func: gaussian
                gauss_10:
                    params: [10]
                    func: gaussian
                mag_1:
                    params: [1]
                    func: gaussian_gradient_magnitude
                mag_5:
                    params: [5]
                    func: gaussian_gradient_magnitude
                mag_10:
                    params: [10]
                    func: gaussian_gradient_magnitude
                hess_1:
                    params: [1]
                    func: hessian_eigenvalues
                hess_5:
                    params: [5]
                    func: hessian_eigenvalues
                hess_10:
                    params: [10]
                    func: hessian_eigenvalues
                lapl_1:
                    params: [1]
                    func: laplacian_of_gaussian
                lapl_5:
                    params: [5]
                    func: laplacian_of_gaussian
                lapl_10:
                    params: [10]
                    func: laplacian_of_gaussian
                structen_1_2:
                    params: [1, 2]   # [inner_scale, outer_scale]
                    func: structure_tensor_eigenvalues
                structen_4_8:
                    params: [5, 10]
                    func: structure_tensor_eigenvalues
                structen_8_16:
                    params: [10, 20]
                    func: structure_tensor_eigenvalues

    'default':
        params:
            anisotropy: [1, 1, 10]
            max_threads_sources: 2
            max_threads_features: 5


find_border_contacts:
    sources:
        disttransf: [intermedfolder, segfeatsfile, [disttransf, raw]]
        segmentation: [intermedfolder, segmlargefile]
    skwargs:
        default:
            recursive_search: False
        disttransf:
            recursive_search: True
    target: [intermedfolder, borderctfile]


compute_paths:

    # Organize settings like this:
    #
    # experiment_0:
    #     truepaths:
    #         sources:
    #             segm: [path, filename, {arguments: vals}]
    #             gt: [path, filename, {arguments: vals}]
    #             conts: [path, filename, {arguments: vals}]
    #             dt: [path, filename, {arguments: vals}]
    #         target: [path, filename]
    #         params:
    #             avoid_duplicates: True|False
    #             penaltypower: value > 0
    #             ignorelabels: []
    #             max_paths_per_object: value >= 1
    #             max_paths_per_object_seed: value
    #     falsepaths:
    #         ...
    #     default:
    #         ...
    # experiment_1:
    #     ...
    # ...
    # experiment_n:
    #     ...
    # default:
    #     ...

    # slice z
    # -------
    'z_train0':
        truepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '0', beta_0.5]]}]
                gt: [datafolder, gtruthfile, {skeys: [[z, '0', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '0', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '0', beta_0.5, disttransf, raw]]}]
        falsepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '0']]}]
                gt: [datafolder, gtruthfile, {skeys: [[z, '0', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '0', '*', contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '0', '*', disttransf, raw]]}]


    'z_predict1':
        truepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '1', beta_0.5]]}]
                gt: [datafolder, gtruthfile, {skeys: [[z, '1', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '1', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '1', beta_0.5, disttransf, raw]]}]
        falsepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '1', beta_0.5]]}]
                gt: [datafolder, gtruthfile, {skeys: [[z, '1', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '1', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '1', 'beta_0.5', disttransf, raw]]}]

    default:
        truepaths:
            params:
                max_paths_per_object: 5
        falsepaths:
            params:
                max_paths_per_object: 10

        default:
            target: [intermedfolder, pathsfile]
            params:
                avoid_duplicates: True
                penaltypower: 10
                ignorelabels: []
                max_paths_per_object_seed: ~
                parallelize: True
                max_threads: 24
                order_of_betas:
                    - beta_0.5
                    - beta_0.45
                    - beta_0.55
                    - beta_0.4
                    - beta_0.6
                    - beta_0.35
                    - beta_0.65
                    - beta_0.3
                    - beta_0.7
                minimum_alternative_label_count: 10


features_of_paths:

    # slice z
    # -------
    'z_train0':
        sources:
            paths:
                truepaths: [intermedfolder, pathsfile, {skeys: [[z_train0, truepaths]]}]
                falsepaths: [intermedfolder, pathsfile, {skeys: [[z_train0, falsepaths]]}]

    'z_predict1':
        sources:
            paths:
                truepaths: [intermedfolder, pathsfile, {skeys: [[z_predict1, truepaths]]}]
                falsepaths: [intermedfolder, pathsfile, {skeys: [[z_predict1, falsepaths]]}]

    # default
    # -------
    default:
        sources:
            featureims:
                rawdata: [intermedfolder, rawfeatsfile, {skeys: ~}]
                probs: [intermedfolder, probsfeatsfile, {skeys: ~}]
                segmentation: [intermedfolder, segfeatsfile, {skeys: ~}]
        targets:
            features: [intermedfolder, featuresfile]
            pathlist: [intermedfolder, pathlistfile]
        params:
            anisotropy: [1, 1, 10]
            features:
                - Sum
                - Mean
                - Variance
                - Maximum
                - Minimum
                - Kurtosis
                - Skewness
                - Pathlength
            max_paths_per_label: ~
            parallelize: True
            max_threads: 10


random_forest:

    # slice z
    # -------
    'z_train0_predict1':
        sources:
            train: [intermedfolder, featuresfile, {skeys: z_train0}]
            predict: [intermedfolder, featuresfile, {skeys: z_predict1}, z_predict1]
            train_pl: [intermedfolder, pathlistfile, {skeys: [[z_train0]]}]
            predict_pl: [intermedfolder, pathlistfile, {skeys: [[z_predict1]]}]

    # default
    # -------
    default:
        params:
            balance_classes: False
        targets:
            result: [resultfolder, rffile]
            featlist: [intermedfolder, featlistfile]
            pathlist: [intermedfolder, pathlistforestfile]

