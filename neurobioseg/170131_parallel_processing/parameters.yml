datafolder0: /mnt/localdata02/jhennies/neuraldata/cremi_2016/
datafolder1: /mnt/localdata01/jhennies/neuraldata/cremi_2016/sample_A_train_betas/
resultfolder: /mnt/localdata01/jhennies/neuraldata/results/cremi_2016/170208_avoid_redundant_path_calculation_sample_a_slice_z_train01_predict10_full/
intermedfolder: /mnt/localdata01/jhennies/neuraldata/results/cremi_2016/170208_avoid_redundant_path_calculation_sample_a_slice_z_train01_predict10_full/intermed/
scriptsfolder: /mnt/localdata01/jhennies/neuraldata/results/cremi_2016/170208_avoid_redundant_path_calculation_sample_a_slice_z_train01_predict10_full/scripts/

debug: False

createfolders: True
overwriteresults: True

rawdatafile:    'cremi.splA.train.raw_neurons.crop.split_xyz.h5'
rawdataname:    'raw'
gtruthfile:     'cremi.splA.train.raw_neurons.crop.split_xyz.h5'
gtruthname:     'neuron_ids'
gtlargefile:    'cremi.splA.train.gtlarge.crop.split_z.h5'
gtlargename:    'neuron_ids'
probsfile:      'cremi.splA.train.probs.crop.split_xyz.h5'
probsname:      'data'
segmfile:       'cremi.splA.train.mcseg_betas.crop.split_xyz.h5'
segmlargefile:  'cremi.splA.train.segmlarge.crop.split_z.h5'
rawfeatsfile:   'cremi.splA.train.rawfeats.crop.split_z.h5'
probsfeatsfile: 'cremi.splA.train.probsfeats.crop.split_z.h5'
segfeatsfile:   'cremi.splA.train.segfeats.crop.split_z.h5'
borderctfile:   'cremi.splA.train.borderct.crop.split_z.h5'
borderctname:   'contacts'
pathsfile:      'cremi.splA.train.paths.crop.split_z.h5'
featuresfile:   'cremi.splA.train.features.crop.split_z.h5'
pathlistfile:   'cremi.splA.train.pathlist.crop.split_z.pkl'

run_remove_small_objects: False
run_compute_feature_images: False
run_find_border_contacts: True
run_compute_paths: True
run_features_of_paths: True
run_random_forest: True

remove_small_objects:
    sources:
        - [datafolder0, gtruthfile, {skeys: [['z', '*', 'neuron_ids']]}]
        - [datafolder1, segmfile, {skeys: [['z', '*']]}]
    targets:
        - [intermedfolder, gtlargefile]
        - [intermedfolder, segmlargefile]
    bysize: 10000
    relabel: True


compute_feature_images:

    'segmentation':
        source: [intermedfolder, segmlargefile, {skeys: [['z', '0', 'beta_0.5']]}]
        target: [intermedfolder, segfeatsfile]
        features:
            disttransf:
                params: ~
                func: disttransf
                raw: ~

    'default':
        params:
            anisotropy: [10, 1, 1]
            max_threads_sources: 5
            max_threads_features: 2


find_border_contacts:
    sources:
        disttransf: [intermedfolder, segfeatsfile, [disttransf, raw]]
        segmentation: [intermedfolder, segmlargefile]
    skwargs:
        default:
            recursive_search: False
        disttransf:
            recursive_search: True
    target: [intermedfolder, borderctfile]


compute_paths:

    # Organize settings like this:
    #
    # experiment_0:
    #     truepaths:
    #         sources:
    #             segm: [path, filename, {arguments: vals}]
    #             gt: [path, filename, {arguments: vals}]
    #             conts: [path, filename, {arguments: vals}]
    #             dt: [path, filename, {arguments: vals}]
    #         target: [path, filename]
    #         params:
    #             avoid_duplicates: True|False
    #             penaltypower: value > 0
    #             ignorelabels: []
    #             max_paths_per_object: value >= 1
    #             max_paths_per_object_seed: value
    #     falsepaths:
    #         ...
    #     default:
    #         ...
    # experiment_1:
    #     ...
    # ...
    # experiment_n:
    #     ...
    # default:
    #     ...

    # slice z
    # -------
    'z_train0_predict1':
        truepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '0', beta_0.5]]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '0', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '0', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '0', beta_0.5, disttransf, raw]]}]
        falsepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '0']]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '0', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '0', '*', contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '0', '*', disttransf, raw]]}]

    'z_train1_predict0':
        truepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '1', beta_0.5]]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '1', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '1', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '1', beta_0.5, disttransf, raw]]}]
        falsepaths:
            sources:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '1']]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '1', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '1', '*', contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '1', '*', disttransf, raw]]}]

    'z_predict0':
        truepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '0', beta_0.5]]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '0', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '0', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '0', beta_0.5, disttransf, raw]]}]
        falsepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '0', beta_0.5]]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '0', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '0', 'beta_0.5', contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '0', 'beta_0.5', disttransf, raw]]}]

    'z_predict1':
        truepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '1', beta_0.5]]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '1', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '1', beta_0.5, contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '1', beta_0.5, disttransf, raw]]}]
        falsepaths:
            sources:
                segm: [intermedfolder, segmlargefile, {skeys: [[z, '1', beta_0.5]]}]
                gt: [intermedfolder, gtlargefile, {skeys: [[z, '1', neuron_ids]]}]
                conts: [intermedfolder, borderctfile, {skeys: [[z, '1', 'beta_0.5', contacts]]}]
                dt: [intermedfolder, segfeatsfile, {skeys: [[z, '1', 'beta_0.5', disttransf, raw]]}]

    default:
        truepaths:
            params:
                max_paths_per_object: 5
        falsepaths:
            params:
                max_paths_per_object: ~

        default:
            target: [intermedfolder, pathsfile]
            params:
                avoid_duplicates: True
                penaltypower: 10
                ignorelabels: []
                max_paths_per_object_seed: ~


features_of_paths:

    # slice z
    # -------
    'z_train0_predict1':
        sources:
            paths:
                truepaths: [intermedfolder, pathsfile, {skeys: [[z_train0_predict1, truepaths]]}]
                falsepaths: [intermedfolder, pathsfile, {skeys: [[z_train0_predict1, falsepaths]]}]

    'z_train1_predict0':
        sources:
            paths:
                truepaths: [intermedfolder, pathsfile, {skeys: [[z_train1_predict0, truepaths]]}]
                falsepaths: [intermedfolder, pathsfile, {skeys: [[z_train1_predict0, falsepaths]]}]

    'z_predict0':
        sources:
            paths:
                truepaths: [intermedfolder, pathsfile, {skeys: [[z_predict0, truepaths]]}]
                falsepaths: [intermedfolder, pathsfile, {skeys: [[z_predict0, falsepaths]]}]

    'z_predict1':
        sources:
            paths:
                truepaths: [intermedfolder, pathsfile, {skeys: [[z_predict1, truepaths]]}]
                falsepaths: [intermedfolder, pathsfile, {skeys: [[z_predict1, falsepaths]]}]

    # default
    # -------
    default:
        sources:
            featureims:
                rawdata: [intermedfolder, rawfeatsfile, {skeys: ~}]
                probs: [intermedfolder, probsfeatsfile, {skeys: ~}]
                segmentation: [intermedfolder, segfeatsfile, {skeys: ~}]
        targets:
            features: [intermedfolder, featuresfile]
            pathlist: [intermedfolder, pathlistfile]
        params:
            anisotropy: [10, 1, 1]
            features:
                - Sum
                - Mean
                - Variance
                - Maximum
                - Minimum
                - Kurtosis
                - Skewness
                - Pathlength
            max_paths_per_label: 5


random_forest:

    # slice z
    # -------
    'z_train0_predict1':
        sources:
            train: [intermedfolder, featuresfile, {skeys: z_train0_predict1}]
            predict: [intermedfolder, featuresfile, {skeys: z_predict1}, z_predict1]
            pathlist: [intermedfolder, pathlistfile, {skeys: [[z_train0_predict1], [z_predict1]]}]

    'z_train1_predict0':
        sources:
            train: [intermedfolder, featuresfile, {skeys: z_train1_predict0}]
            predict: [intermedfolder, featuresfile, {skeys: z_predict0}, z_predict0]
            pathlist: [intermedfolder, pathlistfile, {skeys: [[z_train1_predict0], [z_predict0]]}]

    # default
    # -------
    default:
        params:
            balance_classes: False
        targets:
            result: [resultfolder, resultfile]
            pathlist: [intermedfolder, pathlistforestfile]


